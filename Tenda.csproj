<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>10</LangVersion>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.2" />
    <PackageReference Include="FastEndpoints" Version="2.9.1" />
    <PackageReference Include="FastEndpoints.Security" Version="2.9.1" />
    <PackageReference Include="FastEndpoints.Swagger" Version="2.9.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.21" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0" />
    <PackageReference Include="MongoDB.Entities" Version="21.0.0-alpha3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Include="ClientApp\cypress\tsconfig.json" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="out\out\web.config" />
    <_ContentIncludedByDefault Remove="out\web.config" />
    <_ContentIncludedByDefault Remove="out\appsettings.Development.json" />
    <_ContentIncludedByDefault Remove="out\appsettings.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\angular.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\e2e\tsconfig.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\package-lock.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\package.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\tsconfig.app.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\tsconfig.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\tsconfig.spec.json" />
    <_ContentIncludedByDefault Remove="out\ClientApp\tslint.json" />
    <_ContentIncludedByDefault Remove="out\out\appsettings.Development.json" />
    <_ContentIncludedByDefault Remove="out\out\appsettings.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\angular.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\e2e\tsconfig.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\package-lock.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\package.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\tsconfig.app.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\tsconfig.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\tsconfig.spec.json" />
    <_ContentIncludedByDefault Remove="out\out\ClientApp\tslint.json" />
    <_ContentIncludedByDefault Remove="out\out\Tenda.deps.json" />
    <_ContentIncludedByDefault Remove="out\out\Tenda.runtimeconfig.json" />
    <_ContentIncludedByDefault Remove="out\Tenda.deps.json" />
    <_ContentIncludedByDefault Remove="out\Tenda.runtimeconfig.json" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
  <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
  <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

  <!-- Include the newly-built files in the publish output -->
  <ItemGroup>
    <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
    <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
      <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
    </ResolvedFileToPublish>
  </ItemGroup>
  </Target>

</Project>
